import time

from django.contrib.auth.models import User
from django.shortcuts import render
from django.shortcuts import redirect
from django.template import RequestContext
from django.urls import reverse, reverse_lazy
from django.views.decorators.http import require_http_methods
from django.views.generic import *
# from django.http import request

import openai
import os

from ideas.forms import ContGener, OwnIdeaForm
from ideas.models import Ideas

os.environ["OPENAI_API_KEY"] = "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"
openai.api_key = os.environ["OPENAI_API_KEY"]


# Create your views here.

# class IdeasHome(CreateView):
#     # paginate_by = 12
#     form_class = OwnIdeaForm
#     # model = Ideas
#     # context_object_name = 'ideas'
#     success_url = 'ideas/ideasgen.html'
#     template_name = 'ideas/ideasgen.html'
#
#     def get_context_data(self, **kwargs):
#         kwargs['object_list'] = Ideas.objects.order_by('-pk')
#         return super(IdeasHome, self).get_context_data(**kwargs)

@require_http_methods(["GET", "POST"])
def idea(request):
    ideas = Ideas.objects.order_by('-pk')
    if request.method == "GET":
        form = OwnIdeaForm()
    elif request.method == "POST":

        form = OwnIdeaForm(request.POST)
        if form.is_valid():
            # try:
            print(form.cleaned_data)
            Ideas.objects.create(idea=form.cleaned_data['idea'], user=request.user)
            # formidea = form.save(commit=False)
            # formidea.user = request.user
            # formidea.save()
            # form.instance.user = request.user
            # form.save()
            return redirect('home')
            # except:
            #     form.add_error(None, 'Error of adding idea')
    return render(request, 'ideas/ideasgen.html',
                  {'form': form, 'ideas': ideas})


# def ownideaform(request):
#     ideas = Ideas.objects.order_by('-pk')
#     if request.method == 'POST':
#         form = OwnIdeaForm(request.POST, user=request.user)
#         if form.is_valid():
#             try:
#                 print(form.cleaned_data)
#                 Ideas.objects.create(idea=form.cleaned_data['idea'], user=request.user)
#                 # formidea = form.save(commit=False)
#                 # formidea.user = request.user
#                 # formidea.save()
#                 # form.save()
#                 return redirect('home')
#             except:
#                 form.add_error(None, 'Error of adding idea')
#     else:
#         print("Form not valid")
#         form = OwnIdeaForm()
#     return render(request, 'ideas/ideasgen.html',
#                   {'form': form, 'ideas': ideas})

# class OwnIdeaView(CreateView):
#     form_class = OwnIdeaForm
#     template_name = 'ideas/ideasgen.html'
#     success_url = reverse_lazy('home')

    # def form_valid(self, form):
    #     # Set the user field of the model instance to the current user
    #     form.instance.user = self.request.user
    #     return super().form_valid(form)


def loading_page(request):
    delay = 4  # delay in seconds
    generated = reverse('generated')
    return render(request, 'ideas/loading.html',
                  {'delay': delay, 'generated': generated})


def generated(request):
    return render(request, 'ideas/generated.html')


def contgener(request):
    if request.method == 'POST':
        form = ContGener(request.POST)
        if form.is_valid():
            # print(form.cleaned_data)
            prompt = f"Make short, funny and meaningless idea using this keywords: {form.cleaned_data['keywords']}."

            response = openai.Completion.create(
                engine="text-davinci-003",
                prompt=prompt,
                max_tokens=2048,
                temperature=1,
            )
            message = response.choices[0].text.strip()
            print('chat gpt message:', message)
            Ideas.objects.create(idea=message, user=request.user)
            # prompt = "Controlled generation of some idea"
            # response = openai.Image.create(
            #     prompt=prompt,
            #     n=1,
            #     size="256yx256"
            # )
            # image_url = response['data'][0]['url']
            # print('chat gpt image url:', image_url)
            return render(request, 'ideas/generated.html', {'message': message})

    else:
        form = ContGener()

    return render(request, 'ideas/contgener.html', {'form': form})


def autogenerated(request):
    prompt = f"Make meaningless idea on random topic. Do not mention that it's on random topic"

    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=prompt,
        max_tokens=2048,
        temperature=1,
    )
    message = response.choices[0].text.strip()
    print('chat gpt message:', message)
    Ideas.objects.create(idea=message, user=request.user)

    return render(request, 'ideas/generated.html', {'message': message})
